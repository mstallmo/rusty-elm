// Generated by BUCKLESCRIPT VERSION 5.0.3, PLEASE EDIT WITH CARE

import * as Curry from "../node_modules/bs-platform/lib/es6/curry.js";
import * as Caml_array from "../node_modules/bs-platform/lib/es6/caml_array.js";
import * as Elm$ReasonableRustyElm from "./Elm.bs.js";
import * as Psd$ReasonableRustyElm from "./Psd.bs.js";
import * as Render$ReasonableRustyElm from "./Render.bs.js";

function fillArrayBufferFromString(decodedString, arrayBuffer) {
  return arrayBuffer.map((function (param, index) {
                return decodedString.charCodeAt(index) | 0;
              }));
}

function fillClampedArrayFromArray(inputArray, arrayBuffer) {
  return arrayBuffer.map((function (param, index) {
                return Caml_array.caml_array_get(inputArray, index);
              }));
}

Elm$ReasonableRustyElm.newApp.ports.openPSDDocument.subscribe((function (imageUrl) {
        var decodedString = atob(Caml_array.caml_array_get(imageUrl.split(","), 1));
        var $$document = Psd$ReasonableRustyElm.parsePsd(fillArrayBufferFromString(decodedString, new Uint8Array(decodedString.length)));
        var firstLayer = Caml_array.caml_array_get($$document.layers, 0);
        var firstClampedArrayBuffer = fillClampedArrayFromArray(firstLayer.image, new Uint8ClampedArray(firstLayer.image.length));
        Curry._2(Render$ReasonableRustyElm.renderPsd, "canvas", new ImageData(firstClampedArrayBuffer, firstLayer.width, firstLayer.height));
        var secondLayer = Caml_array.caml_array_get($$document.layers, 1);
        var secondClampedArrayBuffer = fillClampedArrayFromArray(secondLayer.image, new Uint8ClampedArray(1000000));
        return Curry._2(Render$ReasonableRustyElm.renderPsd, "canvas2", new ImageData(secondClampedArrayBuffer, 500, 500));
      }));

export {
  fillArrayBufferFromString ,
  fillClampedArrayFromArray ,
  
}
/*  Not a pure module */
